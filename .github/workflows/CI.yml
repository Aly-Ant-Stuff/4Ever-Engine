# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  buildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > /dev/null
          haxelib install lime 7.9.0
          haxelib install openfl 9.1.0
          haxelib install flixel 4.11.0
          haxelib install flixel-ui
          haxelib install flixel-addons 2.11.0
          haxelib install hscript
          haxelib install hxcpp-debug-server
          haxelib git polymod https://github.com/larsiusprime/polymod.git
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib set openfl 9.1.0
          haxelib set lime 7.9.0
          haxelib set flixel 4.11.0
          haxelib set flixel-addons 2.11.0
          haxelib list
        shell: cmd
      - name: Compile
        run: haxelib run lime build windows -release
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: 4Ever-Engine-windowsBuild
          path: export/release/windows/bin

  buildAndroid:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'zulu'
          java-version: '19'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Restore Cache
        uses: actions/cache@main
        with:
          # not caching the bin folder to prevent asset duplication and stuff like that
          key: cache-build-android
          path: |
            .haxelib/
            export/debug/android/haxe/
            export/debug/android/obj/
          restore-keys: |
            cache-build-android

      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null
          haxelib install lime 7.9.0
          haxelib install openfl 9.1.0
          haxelib install flixel 4.11.0
          haxelib install flixel-ui
          haxelib install flixel-addons 2.11.0
          haxelib install hscript
          haxelib install hxcpp-debug-server
          haxelib git polymod https://github.com/larsiusprime/polymod.git
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git extension-androidtools https://github.com/majigsaw77/extension-androidtools

      - name: Configure Android
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
          haxelib set openfl 9.1.0
          haxelib set lime 7.9.0
          haxelib set flixel 4.11.0
          haxelib set flixel-addons 2.11.0
          haxelib list
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Compile
        run: haxelib run lime build android -release

      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: 4Ever-Engine-androidBuild
          path: export/release/android/bin/app/build/outputs/apk/debug
          if-no-files-found: error

      - name: Uploading Cache
        uses: actions/cache@main
        with:
          # caching again since for some reason it doesnt work with the first post cache shit
          key: cache-build-android
          path: |
            .haxelib/
            export/debug/android/haxe/
            export/debug/android/obj/
          restore-keys: |
            cache-build-android
